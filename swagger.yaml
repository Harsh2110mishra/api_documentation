openapi: "3.0.0"
info:
  title: learning express and swagger
  description: nodejs & express course
  version: 1.0.0
  contact:
   email: harsh2110.mishra@gmail.com
   url: "https://github.com/Harsh2110mishra"

servers:
 - url: "{protocol}://localhost:4000/api/{version}"
   description: for local host - unsecured
   variables: 
     version:
      enum:
       - v1
       - v2
      default: v1 
     protocol: 
      enum:
       - http
       - https
      default: http  
components:
 securitySchemes:
  cookieAuth:
   type: apiKey
   in: cookies
   name: token
  BearerAuth:
      type: http
      scheme: bearer

security:
  - cookieAuth: []

paths:
 /course:
   get:
     tags:
      - Strings
     summary: returns a greet message
     responses:
      200: 
       description: All good success 
       content:
        application/json:
         schema:
          type: string
          example: "mystring"
      400:
       description: Bad request
      500:
       description: internal server error     
       
 /courseObj:
   get:
     tags:
      - Objects
     summary: returns a unique course
     responses:
      200: 
       description: All good success 
       content:
        application/json:
         schema:
          type: object
          properties:
           id: 
            type: string
           name: 
            type: string
           price: 
            type: number

      400:
       description: Bad request
      500:
       description: internal server error  

 /courses:
   get:
     tags:
      - array
     summary: returns a some courses
     responses:
      200: 
       description: All good success 
       content:
        application/json:
         schema:
          type: array
          items:
           type: object
           properties:
            id: 
              type: string
            name: 
              type: string
            price: 
              type: number

      400:
       description: Bad request
      500:
       description: internal server error

 /courseUpload:
    post:
      tags:
        - array
      summary: upload course images
      parameters:
       - in: header
         name: auth
         type: apiKey 
      requestBody:
        content: 
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                 type: string
                 format: binary
      responses:
        200: 
          description: All good success 
          content:
            application/json:
              schema:
                type: boolean
        400:
         description: Bad request
        500:
         description: internal server error        
 
 /addCourse:
    post:
      tags:
        - Objects
      summary: Add courses to existing courses
      consumes:
       - application/json
      produces:
       - application/json
      requestBody:
        required: true
        content: 
          application/json:
            schema:
              type: object
              properties:
                id: 
                  type: string
                name: 
                  type: string
                price: 
                  type: number
      responses:
        200: 
          description: All good success 
          content:
            application/json:
              schema:
                type: boolean
        400:
         description: Bad request
        500:
         description: internal server error       

 /coursesQuery:
  get:
    tags:
      - Strings
    summary: learning query 
    parameters: 
       - name: location
         in: query
         required: true
         schema:
           type: string 
           enum:
            - delhi 
            - raipur 
            - lucknow
       - name: device
         in: query
         required: true
         schema:
           type: string 
           enum:
           - mobile 
           - web   
    responses:
      200: 
        description: All good success 
        content:
          application/json:
            schema:
              type: object
              properties:
                name: 
                 type: string
                value: 
                 type: string 
      400:
       description: Bad request
      500:
       description: internal server error        
 
 /myCourses/{courseId}:
  get:
    tags:
      - Strings
    summary: returns course based on request id
    parameters: 
       - name: courseId
         in: path
         required: true
         default: 22
         schema:
           type: string 
    responses:
      200: 
        description: All good success 
        content:
          application/json:
            schema:
              type: object
              properties:
                id: 
                  type: string
                name: 
                  type: string
                price: 
                  type: number
      400:
       description: Bad request
      500:
       description: internal server error  